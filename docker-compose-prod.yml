services:
  db:
    image: postgres:latest
    env_file:
      - ./backend/.env
    environment:
      POSTGRES_INITDB_ARGS: --encoding=UTF-8 --locale=C.UTF-8
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - db_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U robouser -d robodb"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - app_network

  backend:
    build: 
      context: ./backend
      args:
        - UID=1000
        - GID=1000
    env_file:
      - ./backend/.env
    user: "1000:1000"
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - static_data:/app/staticfiles
      - media_data:/app/media
    ports:
      - "8000:8000"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped
    networks:
      - app_network


  frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile
    env_file:
      - ./frontend/.env
    expose:
      - 3000
    depends_on:
      backend:
        condition: service_healthy 
    restart: unless-stopped
    networks:
      - app_network


  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - static_data:/app/staticfiles
      - media_data:/app/media
      - ./nginx/secure/:/etc/nginx/templates/
      - /etc/localtime:/etc/localtime:ro
      - ./nginx/certbot/conf:/etc/letsencrypt
      - ./nginx/certbot/www:/var/www/certbot
      - ./nginx/99-autoreload.sh:/docker-entrypoint.d/99-autoreload.sh  # Script to autoreload Nginx when certs are renewed
    depends_on:
      - backend
      - frontend
    restart: unless-stopped
    healthcheck: 
      test: ["CMD", "curl", "-k", "-f", "https://localhost/"]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - app_network


  certbot:
    image: certbot/certbot
    volumes:
      - ./nginx/certbot/conf:/etc/letsencrypt
      - ./nginx/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 30d & wait $${!}; done;'"  # Renew certificates every 30 days


networks:
  app_network:
    driver: bridge

volumes:
  db_data:
  static_data:
  media_data:

