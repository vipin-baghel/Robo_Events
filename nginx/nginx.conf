user nginx;
worker_processes auto;

error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
    multi_accept on;
    use epoll;
}

http {
    # Basic Settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    server_tokens off;
    client_max_body_size 20M;

    # MIME types
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Logging
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                   '$status $body_bytes_sent "$http_referer" '
                   '"$http_user_agent" "$http_x_forwarded_for"';
    access_log /var/log/nginx/access.log main;

    # SSL Configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384';
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:50m;
    ssl_session_tickets off;
    ssl_stapling on;
    ssl_stapling_verify on;
    resolver 8.8.8.8 8.8.4.4 valid=300s;
    resolver_timeout 5s;

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=one:10m rate=10r/s;

    # Gzip Settings
    gzip on;
    gzip_disable "msie6";
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_buffers 16 8k;
    gzip_http_version 1.1;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
    
    upstream backend {
        server backend:8000;
    }

    upstream frontend {
        server frontend:3000;
    }

    # HTTP server - redirect to HTTPS
    server {
        listen 80;
        server_name navyugam.com www.navyugam.com;
        
        # Security Headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header Referrer-Policy "no-referrer-when-downgrade" always;
        add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;
        
        # Let's Encrypt challenge
        location ^~ /.well-known/acme-challenge/ {
            root /var/www/certbot;
            try_files $uri =404;
        }
        
        # Redirect all HTTP to HTTPS
        location / {
            return 301 https://$host$request_uri;
        }
    }

    # HTTPS server
    # server {
    #     listen 443 ssl http2;
    #     server_name navyugam.com www.navyugam.com;
        
    #     # SSL configuration
    #     ssl_certificate /etc/letsencrypt/live/navyugam.com/fullchain.pem;
    #     ssl_certificate_key /etc/letsencrypt/live/navyugam.com/privkey.pem;
    #     ssl_trusted_certificate /etc/letsencrypt/live/navyugam.com/chain.pem;
        
    #     # Security Headers
    #     add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
    #     add_header X-Frame-Options "SAMEORIGIN" always;
    #     add_header X-XSS-Protection "1; mode=block" always;
    #     add_header X-Content-Type-Options "nosniff" always;
    #     add_header Referrer-Policy "no-referrer-when-downgrade" always;
    #     add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;
    #     add_header Permissions-Policy "geolocation=(), midi=(), sync-xhr=(), microphone=(), camera=(), magnetometer=(), gyroscope=(), fullscreen=(self), payment=()" always;
        
    #     # Let's Encrypt challenge
    #     location ^~ /.well-known/acme-challenge/ {
    #         root /var/www/certbot;
    #         try_files $uri =404;
    #     }
        
    #     client_max_body_size 20M;

    #     # Increase proxy timeouts
    #     proxy_connect_timeout 300s;
    #     proxy_send_timeout 300s;
    #     proxy_read_timeout 300s;
    #     proxy_buffer_size 16k;
    #     proxy_buffers 4 32k;
    #     proxy_busy_buffers_size 64k;
        
    #     # Proxy settings
    #     proxy_http_version 1.1;
    #     proxy_set_header Host $host;
    #     proxy_set_header X-Real-IP $remote_addr;
    #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #     proxy_set_header X-Forwarded-Proto $scheme;
    #     proxy_set_header X-Forwarded-Host $host;
    #     proxy_set_header X-Forwarded-Port $server_port;
        
    #     # WebSocket support
    #     proxy_set_header Upgrade $http_upgrade;
    #     proxy_set_header Connection "upgrade";
        
    #     # Proxy API requests to backend
    #     location /api/ {
    #         proxy_pass http://backend/;
            
    #         # Rate limiting
    #         limit_req zone=one burst=20 nodelay;
            
    #         # CORS headers
    #         add_header 'Access-Control-Allow-Origin' '*' always;
    #         add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' always;
    #         add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
    #         add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
            
    #         # Handle preflight
    #         if ($request_method = 'OPTIONS') {
    #             add_header 'Access-Control-Allow-Origin' '*';
    #             add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE';
    #             add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization';
    #             add_header 'Access-Control-Max-Age' 1728000;
    #             add_header 'Content-Type' 'text/plain; charset=utf-8';
    #             add_header 'Content-Length' 0;
    #             return 204;
    #         }
    #     }
        
    #     # Proxy admin panel requests to Django backend
    #     location /admin/ {
    #         proxy_pass http://backend/admin/;
            
    #         # Basic auth for admin area (uncomment and set up if needed)
    #         # auth_basic "Admin Area";
    #         # auth_basic_user_file /etc/nginx/.htpasswd;
    #     }
        
    #     # Serve static files directly
    #     location /static/ {
    #         alias /app/staticfiles/;
    #         expires 30d;
    #         access_log off;
    #         add_header Cache-Control "public, max-age=2592000, immutable";
    #         try_files $uri =404;
    #     }
        
    #     # Serve media files
    #     location /media/ {
    #         alias /app/media/;
    #         expires 30d;
    #         access_log off;
    #         add_header Cache-Control "public, max-age=2592000";
    #         try_files $uri =404;
    #     }
        
    #     # Frontend routing - must be the last location block
    #     location / {
    #         proxy_pass http://frontend/;
            
    #         # Cache control for HTML files
    #         location ~* \.(?:html?|xml)$ {
    #             add_header Cache-Control "no-cache, no-store, must-revalidate";
    #         }
    #     }
        
    #     # Disable logging for favicon.ico
    #     location = /favicon.ico {
    #         log_not_found off;
    #         access_log off;
    #         expires max;
    #     }
        
    #     # Disable logging for robots.txt
    #     location = /robots.txt {
    #         log_not_found off;
    #         access_log off;
    #         expires 7d;
    #     }
        
    #     # Deny access to hidden files
    #     location ~ /\. {
    #         deny all;
    #         access_log off;
    #         log_not_found off;
    #         return 404;
    #     }
        
    #     # Handle errors
    #     error_page 404 /404.html;
    #     location = /404.html {
    #         root /usr/share/nginx/html;
    #         internal;
    #     }
        
    #     error_page 500 502 503 504 /50x.html;
    #     location = /50x.html {
    #         root /usr/share/nginx/html;
    #         internal;
    #     }
    # }
}
